//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using WCFServiceHost.Models;

namespace WCFServiceHost.Test.ServiceClient {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceClient.IService")]
    public interface IService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetData", ReplyAction="http://tempuri.org/IService/GetDataResponse")]
        string GetData(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetData", ReplyAction="http://tempuri.org/IService/GetDataResponse")]
        System.Threading.Tasks.Task<string> GetDataAsync(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/ObterClientes", ReplyAction="http://tempuri.org/IService/ObterClientesResponse")]
        WCFServiceHost.Models.Cliente[] ObterClientes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/ObterClientes", ReplyAction="http://tempuri.org/IService/ObterClientesResponse")]
        System.Threading.Tasks.Task<WCFServiceHost.Models.Cliente[]> ObterClientesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/AdicionarCliente", ReplyAction="http://tempuri.org/IService/AdicionarClienteResponse")]
        void AdicionarCliente(WCFServiceHost.Models.Cliente cliente);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/AdicionarCliente", ReplyAction="http://tempuri.org/IService/AdicionarClienteResponse")]
        System.Threading.Tasks.Task AdicionarClienteAsync(WCFServiceHost.Models.Cliente cliente);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceChannel : WCFServiceHost.Test.ServiceClient.IService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceClient : System.ServiceModel.ClientBase<WCFServiceHost.Test.ServiceClient.IService>, WCFServiceHost.Test.ServiceClient.IService {
        
        public ServiceClient() {
        }
        
        public ServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string GetData(int value) {
            return base.Channel.GetData(value);
        }
        
        public System.Threading.Tasks.Task<string> GetDataAsync(int value) {
            return base.Channel.GetDataAsync(value);
        }
        
        public WCFServiceHost.Models.Cliente[] ObterClientes() {
            return base.Channel.ObterClientes();
        }
        
        public System.Threading.Tasks.Task<WCFServiceHost.Models.Cliente[]> ObterClientesAsync() {
            return base.Channel.ObterClientesAsync();
        }
        
        public void AdicionarCliente(WCFServiceHost.Models.Cliente cliente) {
            base.Channel.AdicionarCliente(cliente);
        }
        
        public System.Threading.Tasks.Task AdicionarClienteAsync(WCFServiceHost.Models.Cliente cliente) {
            return base.Channel.AdicionarClienteAsync(cliente);
        }

        internal Cliente ObterClientePorId(int v) {
            throw new NotImplementedException();
        }
    }
}
